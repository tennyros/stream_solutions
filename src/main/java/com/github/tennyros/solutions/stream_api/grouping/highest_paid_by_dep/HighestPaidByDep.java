package com.github.tennyros.solutions.stream_api.grouping.highest_paid_by_dep;

import com.github.tennyros.solutions.stream_api.util.Employee;

import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * –ù–∞–π—Ç–∏ —Å–∞–º–æ–≥–æ –≤—ã—Å–æ–∫–æ–æ–ø–ª–∞—á–∏–≤–∞–µ–º–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –∫–∞–∂–¥–æ–º –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ.
 * <br>
 * üì• –í—Ö–æ–¥:
 * <br>
 * –°–ø–∏—Å–æ–∫ List<Employee>, –≥–¥–µ —É Employee –µ—Å—Ç—å:
 * <br>
 * - String name;
 * <br>
 * - String department;
 * <br>
 * - int salary;
 * <br>
 * üì§ –í—ã—Ö–æ–¥:
 * <br>
 * Map<String, String> ‚Äî –≥–¥–µ –∫–ª—é—á–æ–º —è–≤–ª—è–µ—Ç—Å—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äî –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —Å–∞–º–æ–π –≤—ã—Å–æ–∫–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤ —ç—Ç–æ–º –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ.
 */
public class HighestPaidByDep {

    public static void main(String[] args) {
        List<Employee> employees = List.of(
                new Employee("John", "IT", 9000),
                new Employee("Jane", "IT", 12000),
                new Employee("Bill", "HR", 11000),
                new Employee("Anna", "HR", 12500)
        );

        System.out.println(highestPaidByDepartment(employees));
    }

    public static Map<String, String> highestPaidByDepartment(List<Employee> employees) {
        return employees.stream()
                .collect(Collectors.groupingBy(
                        Employee::getDepartment,
                        Collectors.collectingAndThen(
                                Collectors.maxBy(Comparator.comparingInt(Employee::getSalary)),
                                e -> e.map(Employee::getName).orElse("")
                        )
                ));
    }

}
